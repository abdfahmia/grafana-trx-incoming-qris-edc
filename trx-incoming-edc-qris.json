{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 38,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 35,
        "panels": [],
        "title": "Summary By Number",
        "type": "row"
      },
      {
        "datasource": {
          "type": "loki",
          "uid": "P8E80F9AEF21F6940"
        },
        "gridPos": {
          "h": 2,
          "w": 11,
          "x": 0,
          "y": 1
        },
        "id": 1,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<CENTER>\n<p style=\"background-color:#1C82AD;\"><b><font size=\"5\" color=\"#fffff\">\nSummary H-1\n</font></b></p>\n</CENTER>",
          "mode": "html"
        },
        "pluginVersion": "10.0.2",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "loki",
          "uid": "P8E80F9AEF21F6940"
        },
        "gridPos": {
          "h": 2,
          "w": 11,
          "x": 13,
          "y": 1
        },
        "id": 10,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<CENTER>\n<p style=\"background-color:#1C82AD;\"><b><font size=\"5\" color=\"#fffff\">\nSummary Today\n</font></b></p>\n</CENTER>",
          "mode": "html"
        },
        "pluginVersion": "10.0.2",
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 0,
          "y": 3
        },
        "id": 27,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15,
            "valueSize": 0
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT \r\n    trx_date\r\n    ,SUM(jumlah_transaksi) as 'QRIS TRX FREQUENCY'\r\n  FROM QRIS.dbo.incoming_QRIS_EXT_BRI_DAILY\r\n  WHERE \r\n    DATEDIFF(DAY,trx_date,GETDATE()-1) = 0 AND resp_code = '00'\r\n  GROUP BY \r\n    trx_date",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "timeFrom": "now-1d",
        "title": "Freq Trx QRIS",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "QRIS SALES VOLUME": true
              },
              "indexByName": {
                "QRIS SALES VOLUME": 2,
                "QRIS TRX FREQUENCY": 1,
                "TANGGAL_TRANSAKSI": 0
              },
              "renameByName": {
                "QRIS SALES VOLUME": "Qris Sales Volume",
                "QRIS TRX FREQUENCY": "QRIS Trx Frequency",
                "TANGGAL_TRANSAKSI": ""
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 6,
          "y": 3
        },
        "id": 28,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT \r\n    trx_date\r\n    ,convert(decimal(18,2),SUM(total_nominal)/1000000) as 'QRIS SALES VOLUME'\r\n  FROM QRIS.dbo.incoming_QRIS_EXT_BRI_DAILY\r\n  WHERE \r\n    DATEDIFF(DAY,trx_date,GETDATE()-1) = 0 AND resp_code = '00'\r\n  GROUP BY \r\n    trx_date",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "timeFrom": "now-1d",
        "title": "Volume Trx QRIS (Rp Juta)",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "QRIS TRX FREQUENCY": true
              },
              "indexByName": {
                "QRIS SALES VOLUME": 2,
                "QRIS TRX FREQUENCY": 1,
                "TANGGAL_TRANSAKSI": 0
              },
              "renameByName": {
                "QRIS SALES VOLUME": "Qris Sales Volume",
                "QRIS TRX FREQUENCY": "QRIS Trx Frequency",
                "TANGGAL_TRANSAKSI": ""
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 13,
          "y": 3
        },
        "id": 43,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15,
            "valueSize": 0
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "trx_datetime",
                "id": "2",
                "settings": {
                  "interval": "1d"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
            },
            "metrics": [
              {
                "id": "1",
                "type": "count"
              }
            ],
            "query": "NOT cpan_code: \"93600002\" AND resp_code: \"00\" AND trx_type: \"2\"",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Freq Trx QRIS",
        "transformations": [],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 19,
          "y": 3
        },
        "id": 44,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15,
            "valueSize": 0
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "trx_datetime",
                "id": "2",
                "settings": {
                  "interval": "1d"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
            },
            "metrics": [
              {
                "field": "trx_amount_fix",
                "id": "1",
                "settings": {
                  "script": "_value/1000000"
                },
                "type": "sum"
              }
            ],
            "query": "NOT cpan_code: \"93600002\" AND resp_code: \"00\" AND trx_type: \"2\"",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Volume Trx QRIS (Rp Juta)",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 0,
          "y": 6
        },
        "id": 4,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "select \r\n    Tanggal\r\n    ,sum(TRANSACTION_TOTAL)  as  'Kartu Debit Trx Frequency'   \r\n  from [DataAnalytics].dbo.[incoming_NPG_EXT_BRI_DAILY] \r\n  where \r\n    datediff(day, [Tanggal],getdate()-1) = 0 AND RC = '00'\r\n  group by \r\n    Tanggal",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "timeFrom": "now-1d",
        "title": "Freq Trx Debit",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "Kartu Debit Sales Volume": true
              },
              "indexByName": {
                "QRIS SALES VOLUME": 1,
                "QRIS TRX FREQUENCY": 0,
                "date": 2
              },
              "renameByName": {}
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 6,
          "y": 6
        },
        "id": 5,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "select \r\n    Tanggal  \r\n    ,convert(decimal(18,2),sum(TRANSACTION_AMOUNT)/1000000) as 'Kartu Debit Sales Volume' \r\n  from [DataAnalytics].dbo.[incoming_NPG_EXT_BRI_DAILY] \r\n  where \r\n    datediff(day, [Tanggal],getdate()-1) = 0 AND RC = '00'\r\n  group by \r\n    Tanggal",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "timeFrom": "now-1d",
        "title": "Volume Trx Debit (Rp Juta)",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "Kartu Debit Trx Frequency": true
              },
              "indexByName": {
                "QRIS SALES VOLUME": 1,
                "QRIS TRX FREQUENCY": 0,
                "date": 2
              },
              "renameByName": {}
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 13,
          "y": 6
        },
        "id": 33,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15,
            "valueSize": 0
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "@timestamp",
                "id": "2",
                "settings": {
                  "interval": "1d"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
            },
            "metrics": [
              {
                "id": "1",
                "type": "count"
              }
            ],
            "query": "switch :\"PSW X\" AND NOT jenisTrx :BRI AND rc: \"00\"",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Freq Trx Debit & Kredit",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 19,
          "y": 6
        },
        "id": 34,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15,
            "valueSize": 0
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "@timestamp",
                "id": "2",
                "settings": {
                  "interval": "1d"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
            },
            "metrics": [
              {
                "field": "trxAmount",
                "id": "1",
                "settings": {
                  "script": "_value/100000000"
                },
                "type": "sum"
              }
            ],
            "query": "switch :\"PSW X\" AND NOT jenisTrx :BRI AND rc: \"00\"",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Volume Trx Debit & Kredit (Rp Juta)",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 0,
          "y": 9
        },
        "id": 15,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "select \r\n    Tanggal\r\n    ,sum(TRANSACTION_TOTAL)  as  'Kartu Kredit Trx Frequency'   \r\n  from KartuKredit.dbo.[incoming_CC_EXT_BRI_DAILY] \r\n  where \r\n    datediff(day, [Tanggal],getdate()-1) = 0 AND RC = '00'\r\n  group by \r\n    Tanggal",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "timeFrom": "now-1d",
        "title": "Freq Trx Kredit",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "Kartu Debit Sales Volume": true
              },
              "indexByName": {
                "QRIS SALES VOLUME": 1,
                "QRIS TRX FREQUENCY": 0,
                "date": 2
              },
              "renameByName": {}
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 6,
          "y": 9
        },
        "id": 16,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "select \r\n    Tanggal  \r\n    ,convert(decimal(18,2),sum(TRANSACTION_AMOUNT)/1000000) as 'Kartu Kredit Sales Volume' \r\n  from KartuKredit.dbo.[incoming_CC_EXT_BRI_DAILY] \r\n  where \r\n    datediff(day, [Tanggal],getdate()-1) = 0 AND RC = '00'\r\n  group by \r\n    Tanggal",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "timeFrom": "now-1d",
        "title": "Volume Trx Kredit (Rp Juta)",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "Kartu Debit Trx Frequency": true
              },
              "indexByName": {
                "QRIS SALES VOLUME": 1,
                "QRIS TRX FREQUENCY": 0,
                "date": 2
              },
              "renameByName": {}
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "datasource",
          "uid": "-- Mixed --"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 13,
          "y": 9
        },
        "id": 45,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15,
            "valueSize": 0
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "@timestamp",
                "id": "2",
                "settings": {
                  "interval": "1d",
                  "min_doc_count": "0"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
            },
            "hide": false,
            "metrics": [
              {
                "id": "1",
                "type": "count"
              }
            ],
            "query": "switch :\"PSW X\" AND NOT jenisTrx :BRI ",
            "refId": "A",
            "timeField": "@timestamp"
          },
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "trx_datetime",
                "id": "2",
                "settings": {
                  "interval": "auto"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
            },
            "hide": false,
            "metrics": [
              {
                "id": "1",
                "type": "count"
              }
            ],
            "query": "NOT cpan_code: \"93600002\" AND resp_code: \"00\" AND trx_type: \"2\"",
            "refId": "C",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Freq All Trx",
        "transformations": [
          {
            "id": "joinByField",
            "options": {
              "byField": "Time",
              "mode": "outer"
            }
          },
          {
            "id": "calculateField",
            "options": {
              "alias": "Total Frequency",
              "mode": "reduceRow",
              "reduce": {
                "include": [
                  "Count"
                ],
                "reducer": "sum"
              }
            }
          },
          {
            "disabled": true,
            "id": "calculateField",
            "options": {
              "alias": "Total Sales Volume",
              "mode": "reduceRow",
              "reduce": {
                "include": [
                  "Sum data_REQUEST_transactionAmount",
                  "Sum trxAmount",
                  "Sum trx_billamt"
                ],
                "reducer": "sum"
              }
            }
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "Count": true,
                "Sum data_REQUEST_transactionAmount": true,
                "Sum trxAmount": true,
                "Sum trx_billamt": true,
                "Time": true
              },
              "indexByName": {},
              "renameByName": {}
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "datasource",
          "uid": "-- Mixed --"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 19,
          "y": 9
        },
        "id": 46,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15,
            "valueSize": 0
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "@timestamp",
                "id": "2",
                "settings": {
                  "interval": "1d",
                  "min_doc_count": "0"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
            },
            "hide": false,
            "metrics": [
              {
                "field": "trxAmount",
                "id": "3",
                "settings": {
                  "script": "_value/100000000"
                },
                "type": "sum"
              }
            ],
            "query": "switch :\"PSW X\" AND NOT jenisTrx :BRI AND rc: \"00\"",
            "refId": "A",
            "timeField": "@timestamp"
          },
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "trx_datetime",
                "id": "2",
                "settings": {
                  "interval": "1d"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
            },
            "hide": false,
            "metrics": [
              {
                "field": "trx_amount_fix",
                "id": "3",
                "settings": {
                  "script": "_value/1000000"
                },
                "type": "sum"
              }
            ],
            "query": "NOT cpan_code: \"93600002\" AND resp_code: \"00\" AND trx_type: \"2\"",
            "refId": "B",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Volume All Trx (Rp Juta)",
        "transformations": [
          {
            "id": "joinByField",
            "options": {
              "byField": "Time",
              "mode": "outer"
            }
          },
          {
            "id": "calculateField",
            "options": {
              "alias": "Total Sales Volume",
              "mode": "reduceRow",
              "reduce": {
                "include": [
                  "Sum trxAmount",
                  "Sum trx_amount_fix"
                ],
                "reducer": "sum"
              }
            }
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "Count": true,
                "Sum data_REQUEST_transactionAmount": true,
                "Sum trxAmount": true,
                "Sum trx_amount_fix": true,
                "Sum trx_billamt": true,
                "Time": true
              },
              "indexByName": {},
              "renameByName": {}
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 0,
          "y": 12
        },
        "id": 25,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "select \r\n    Tanggal\r\n    ,sum(TRANSACTION_TOTAL)  as  'Kartu Kredit Trx Frequency'   \r\n  from KartuKredit.dbo.[incoming_CC_EXT_BRI_DAILY] \r\n  where \r\n    datediff(day, [Tanggal],getdate()-1) = 0 AND RC = '00'\r\n  group by \r\n    Tanggal",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "hide": false,
            "rawQuery": true,
            "rawSql": "select \r\n    Tanggal\r\n    ,sum(TRANSACTION_TOTAL)  as  'Kartu Debit Trx Frequency'   \r\n  from [DataAnalytics].dbo.[incoming_NPG_EXT_BRI_DAILY] \r\n  where \r\n    datediff(day, [Tanggal],getdate()-1) = 0 AND RC = '00'\r\n  group by \r\n    Tanggal",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "hide": false,
            "rawQuery": true,
            "rawSql": "SELECT \r\n    trx_date as Tanggal\r\n    ,SUM(jumlah_transaksi) as 'QRIS TRX FREQUENCY'\r\n  FROM QRIS.dbo.incoming_QRIS_EXT_BRI_DAILY\r\n  WHERE \r\n    DATEDIFF(DAY,trx_date,GETDATE()-1) = 0 AND resp_code = '00'\r\n  GROUP BY \r\n    trx_date",
            "refId": "C",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "timeFrom": "now-1d",
        "title": "Freq All Trx",
        "transformations": [
          {
            "id": "joinByField",
            "options": {
              "byField": "Tanggal",
              "mode": "outer"
            }
          },
          {
            "id": "calculateField",
            "options": {
              "alias": "Total Frequency",
              "mode": "reduceRow",
              "reduce": {
                "include": [
                  "Kartu Kredit Trx Frequency",
                  "QRIS TRX FREQUENCY",
                  "Kartu Debit Trx Frequency"
                ],
                "reducer": "sum"
              },
              "replaceFields": false
            }
          },
          {
            "id": "filterFieldsByName",
            "options": {
              "include": {
                "names": [
                  "Total Frequency",
                  "Total Sales Volume"
                ]
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "light-green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byType",
                "options": "number"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 3,
          "w": 5,
          "x": 6,
          "y": 12
        },
        "id": 26,
        "options": {
          "colorMode": "background_solid",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 15
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "select \r\n    Tanggal  \r\n    ,convert(decimal(18,2),sum(TRANSACTION_AMOUNT)/1000000) as 'Kartu Kredit Sales Volume' \r\n  from KartuKredit.dbo.[incoming_CC_EXT_BRI_DAILY] \r\n  where \r\n    datediff(day, [Tanggal],getdate()-1) = 0 AND RC = '00'\r\n  group by \r\n    Tanggal",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "hide": false,
            "rawQuery": true,
            "rawSql": "select \r\n    Tanggal  \r\n    ,convert(decimal(18,2),sum(TRANSACTION_AMOUNT)/1000000) as 'Kartu Debit Sales Volume' \r\n  from [DataAnalytics].dbo.[incoming_NPG_EXT_BRI_DAILY] \r\n  where \r\n    datediff(day, [Tanggal],getdate()-1) = 0 AND RC = '00'\r\n  group by \r\n    Tanggal",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "hide": false,
            "rawQuery": true,
            "rawSql": "SELECT \r\n    trx_date as Tanggal\r\n    ,convert(decimal(18,2),SUM(total_nominal)/1000000) as 'QRIS SALES VOLUME'\r\n  FROM QRIS.dbo.incoming_QRIS_EXT_BRI_DAILY\r\n  WHERE \r\n    DATEDIFF(DAY,trx_date,GETDATE()-1) = 0 AND resp_code = '00'\r\n  GROUP BY \r\n    trx_date",
            "refId": "C",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "timeFrom": "now-1d",
        "title": "Volume All Trx (Rp Juta)",
        "transformations": [
          {
            "id": "joinByField",
            "options": {
              "byField": "Tanggal",
              "mode": "outer"
            }
          },
          {
            "id": "calculateField",
            "options": {
              "alias": "Total Sales Volume",
              "mode": "reduceRow",
              "reduce": {
                "include": [
                  "Kartu Kredit Sales Volume",
                  "Kartu Debit Sales Volume",
                  "QRIS SALES VOLUME"
                ],
                "reducer": "sum"
              }
            }
          },
          {
            "id": "filterFieldsByName",
            "options": {
              "include": {
                "names": [
                  "Total Frequency",
                  "Total Sales Volume"
                ]
              }
            }
          }
        ],
        "type": "stat"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 15
        },
        "id": 23,
        "panels": [],
        "title": "Summary Monthly",
        "type": "row"
      },
      {
        "datasource": {
          "type": "loki",
          "uid": "P8E80F9AEF21F6940"
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 16
        },
        "id": 11,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<CENTER>\n<p style=\"background-color:#1C82AD;\"><b><font size=\"5\" color=\"#ffffff\">\nData Transaksi Monthly\n</font></b></p>\n</CENTER>",
          "mode": "html"
        },
        "pluginVersion": "10.0.2",
        "type": "text"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "gridPos": {
          "h": 11,
          "w": 8,
          "x": 0,
          "y": 18
        },
        "id": 29,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "visual",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "console.log(context);\n\n// Extracting data from the dataset\nvar categoryData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[0];\n});\n\nvar metricsData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[1];\n});\n\n// Function to calculate color gradient based on value\nfunction calculateColor(value) {\n  // Normalize the value between 0 and 1\n  var normalizedValue = (value - Math.min(...metricsData)) / (Math.max(...metricsData) - Math.min(...metricsData));\n\n  // Calculate the RGB values based on the normalized value\n  var red = Math.round(255 * normalizedValue);\n  var green = Math.round(255 * (1 - normalizedValue));\n\n  // Convert to hexadecimal format\n  var color = '#' + red.toString(16).padStart(2, '0') + green.toString(16).padStart(2, '0') + '00';\n\n  return color;\n}\n\n// Generate the color array for the bar chart\nvar barColors = metricsData.map(function (value) {\n  return calculateColor(value);\n});\n\nreturn {\n  dataset: context.editor.dataset,\n  xAxis: {\n    type: 'category',\n    data: categoryData\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n  },\n  series: [\n    {\n      type: 'bar',\n      name: \"Frekeunsi Transaksi QRIS (Ribu Transaksi)\",\n      data: metricsData,\n      itemStyle: {\n        color: function (params) {\n          // Use the precalculated color array\n          return barColors[params.dataIndex];\n        }\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        formatter: function (params) {\n          return 'Volume Transaksi : Rp ' + params[0].value.toFixed(2) + 'Milyar';\n        }\n      }\n    },\n    {\n      type: 'line',\n      name: \"Line Chart\",\n      data: metricsData,\n      lineStyle: {\n        color: 'yellow' // Line color\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'yellow' // Color on hover\n        }\n      },\n      tooltip: {\n        show: false // Hide the tooltip for the \"Line Chart\"\n      }\n    }\n  ],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n};\n",
            "codeHeight": 408,
            "dataset": [
              {
                "name": "trx_date",
                "source": "A"
              },
              {
                "name": "metrics_value",
                "source": "A"
              }
            ],
            "series": [
              {
                "id": "Data",
                "name": "Data",
                "type": "bar",
                "uid": "0c4eabb4-6d9c-4a39-96ae-1fc5f23eed6f"
              },
              {
                "encode": {
                  "x": [],
                  "y": []
                },
                "id": "Data2",
                "name": "",
                "type": "line",
                "uid": "e70da15c-57b9-490d-90da-d8df27ca3c35"
              }
            ]
          }
        },
        "pluginVersion": "5.2.0",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "with  a as (\r\n  select \r\n    trx_date\r\n    ,convert(decimal(18,2),sum(jumlah_transaksi)/1000) transaction_frequency    \r\n  from [QRIS].[dbo].[incoming_QRIS_EXT_BRI_DAILY]\r\n  where \r\n    datediff(MONTH, trx_date,getdate()) <= 6 and resp_code ='00'\r\n    --and convert(varchar(7), [date],120) >= '2023-06'\r\n  group by \r\n    trx_date\r\n)\r\nselect\r\nyear([trx_date]) as y,\r\nmonth([trx_date]) as m\r\n, SUBSTRING(convert(varchar,[trx_date],7),1,3) as trx_date\r\n ,sum(transaction_frequency) metrics_value\r\nfrom a\r\ngroup by year([trx_date]), month([trx_date]), SUBSTRING(convert(varchar,[trx_date],7),1,3)\r\norder by year([trx_date]), month([trx_date]), SUBSTRING(convert(varchar,[trx_date],7),1,3)\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summary Frekuensi Transaksi QRIS Monthly (Ribu Transaksi) ",
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "gridPos": {
          "h": 11,
          "w": 8,
          "x": 8,
          "y": 18
        },
        "id": 12,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "visual",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "console.log(context);\n\n// Extracting data from the dataset\nvar categoryData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[0];\n});\n\nvar metricsData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[1];\n});\n\n// Function to calculate color gradient based on value\nfunction calculateColor(value) {\n  // Normalize the value between 0 and 1\n  var normalizedValue = (value - Math.min(...metricsData)) / (Math.max(...metricsData) - Math.min(...metricsData));\n\n  // Calculate the RGB values based on the normalized value\n  var red = Math.round(255 * normalizedValue);\n  var green = Math.round(255 * (1 - normalizedValue));\n\n  // Convert to hexadecimal format\n  var color = '#' + red.toString(16).padStart(2, '0') + green.toString(16).padStart(2, '0') + '00';\n\n  return color;\n}\n\n// Generate the color array for the bar chart\nvar barColors = metricsData.map(function (value) {\n  return calculateColor(value);\n});\n\nreturn {\n  dataset: context.editor.dataset,\n  xAxis: {\n    type: 'category',\n    data: categoryData\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n  },\n  series: [\n    {\n      type: 'bar',\n      name: \"Frekeunsi Transaksi Kartu Debit (Ribu Transaksi)\",\n      data: metricsData,\n      itemStyle: {\n        color: function (params) {\n          // Use the precalculated color array\n          return barColors[params.dataIndex];\n        }\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        formatter: function (params) {\n          return 'Volume Transaksi : Rp ' + params[0].value.toFixed(2) + 'Milyar';\n        }\n      }\n    },\n    {\n      type: 'line',\n      name: \"Line Chart\",\n      data: metricsData,\n      lineStyle: {\n        color: 'yellow' // Line color\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'yellow' // Color on hover\n        }\n      },\n      tooltip: {\n        show: false // Hide the tooltip for the \"Line Chart\"\n      }\n    }\n  ],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n};\n",
            "codeHeight": 408,
            "dataset": [
              {
                "name": "trx_date",
                "source": "A"
              },
              {
                "name": "metrics_value",
                "source": "A"
              }
            ],
            "series": [
              {
                "id": "Data",
                "name": "Data",
                "type": "bar",
                "uid": "0c4eabb4-6d9c-4a39-96ae-1fc5f23eed6f"
              },
              {
                "encode": {
                  "x": [],
                  "y": []
                },
                "id": "Data2",
                "name": "",
                "type": "line",
                "uid": "e70da15c-57b9-490d-90da-d8df27ca3c35"
              }
            ]
          }
        },
        "pluginVersion": "5.2.0",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "with  a as (\r\n  select \r\n    Tanggal\r\n    ,convert(decimal(18,2),sum(TRANSACTION_TOTAL)/1000) transaction_frequency    \r\n  from [DataAnalytics].dbo.[incoming_NPG_EXT_BRI_DAILY]\r\n  where \r\n    datediff(MONTH, Tanggal,getdate()) <= 6 and RC ='00'\r\n    --and convert(varchar(7), [date],120) >= '2023-06'\r\n  group by \r\n    Tanggal\r\n)\r\nselect\r\nyear([Tanggal]) as y,\r\nmonth([Tanggal]) as m\r\n, SUBSTRING(convert(varchar,[Tanggal],7),1,3) as trx_date\r\n ,sum(transaction_frequency) metrics_value\r\nfrom a\r\ngroup by year([Tanggal]), month([Tanggal]), SUBSTRING(convert(varchar,[Tanggal],7),1,3)\r\norder by year([Tanggal]), month([Tanggal]), SUBSTRING(convert(varchar,[Tanggal],7),1,3)\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "hide": false,
            "rawQuery": true,
            "rawSql": "with  a as (\r\n  select \r\n    Tanggal\r\n    ,convert(decimal(18,2),sum(TRANSACTION_TOTAL)/1000) transaction_frequency    \r\n  from [DataAnalytics].dbo.[incoming_NPG_EXT_BRI_DAILY]\r\n  where \r\n    datediff(MONTH, Tanggal,getdate()) <= 6 \r\n    and DATEDIFF(DAY,Tanggal,GETDATE()) < 30\r\n    --and rc ='00'\r\n    --and convert(varchar(7), [date],120) >= '2023-06'\r\n  group by \r\n    Tanggal\r\n)\r\nselect\r\nyear([Tanggal]) as y,\r\nmonth([Tanggal]) as m,\r\nday([Tanggal]) as d\r\n, SUBSTRING(convert(varchar,[Tanggal],7),1,3) as trx_date\r\n ,sum(transaction_frequency) metrics_value\r\nfrom a\r\ngroup by year([Tanggal]), month([Tanggal]), day([Tanggal]), SUBSTRING(convert(varchar,[Tanggal],7),1,3)\r\norder by year([Tanggal]), month([Tanggal]), day([Tanggal]), SUBSTRING(convert(varchar,[Tanggal],7),1,3)",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summary Frekuensi Transaksi Kartu Debit Monthly (Ribu Transaksi) ",
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "gridPos": {
          "h": 11,
          "w": 8,
          "x": 16,
          "y": 18
        },
        "id": 17,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "visual",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "console.log(context);\n\n// Extracting data from the dataset\nvar categoryData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[0];\n});\n\nvar metricsData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[1];\n});\n\n// Function to calculate color gradient based on value\nfunction calculateColor(value) {\n  // Normalize the value between 0 and 1\n  var normalizedValue = (value - Math.min(...metricsData)) / (Math.max(...metricsData) - Math.min(...metricsData));\n\n  // Calculate the RGB values based on the normalized value\n  var red = Math.round(255 * normalizedValue);\n  var green = Math.round(255 * (1 - normalizedValue));\n\n  // Convert to hexadecimal format\n  var color = '#' + red.toString(16).padStart(2, '0') + green.toString(16).padStart(2, '0') + '00';\n\n  return color;\n}\n\n// Generate the color array for the bar chart\nvar barColors = metricsData.map(function (value) {\n  return calculateColor(value);\n});\n\nreturn {\n  dataset: context.editor.dataset,\n  xAxis: {\n    type: 'category',\n    data: categoryData\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n  },\n  series: [\n    {\n      type: 'bar',\n      name: \"Frekeunsi Transaksi Kartu Kredit (Ribu Transaksi)\",\n      data: metricsData,\n      itemStyle: {\n        color: function (params) {\n          // Use the precalculated color array\n          return barColors[params.dataIndex];\n        }\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        formatter: function (params) {\n          return 'Volume Transaksi : Rp ' + params[0].value.toFixed(2) + 'Milyar';\n        }\n      }\n    },\n    {\n      type: 'line',\n      name: \"Line Chart\",\n      data: metricsData,\n      lineStyle: {\n        color: 'yellow' // Line color\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'yellow' // Color on hover\n        }\n      },\n      tooltip: {\n        show: false // Hide the tooltip for the \"Line Chart\"\n      }\n    }\n  ],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n};\n",
            "codeHeight": 408,
            "dataset": [
              {
                "name": "trx_date",
                "source": "A"
              },
              {
                "name": "metrics_value",
                "source": "A"
              }
            ],
            "series": [
              {
                "id": "Data",
                "name": "Data",
                "type": "bar",
                "uid": "0c4eabb4-6d9c-4a39-96ae-1fc5f23eed6f"
              },
              {
                "encode": {
                  "x": [],
                  "y": []
                },
                "id": "Data2",
                "name": "",
                "type": "line",
                "uid": "e70da15c-57b9-490d-90da-d8df27ca3c35"
              }
            ]
          }
        },
        "pluginVersion": "5.2.0",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "with  a as (\r\n  select \r\n    Tanggal\r\n    ,convert(decimal(18,2),sum(TRANSACTION_TOTAL)/1000) transaction_frequency    \r\n  from KartuKredit.dbo.[incoming_CC_EXT_BRI_DAILY]\r\n  where \r\n    datediff(MONTH, Tanggal,getdate()) <= 6 and RC ='00'\r\n    --and convert(varchar(7), [date],120) >= '2023-06'\r\n  group by \r\n    Tanggal\r\n)\r\nselect\r\nyear([Tanggal]) as y,\r\nmonth([Tanggal]) as m\r\n, SUBSTRING(convert(varchar,[Tanggal],7),1,3) as trx_date\r\n ,sum(transaction_frequency) metrics_value\r\nfrom a\r\ngroup by year([Tanggal]), month([Tanggal]), SUBSTRING(convert(varchar,[Tanggal],7),1,3)\r\norder by year([Tanggal]), month([Tanggal]), SUBSTRING(convert(varchar,[Tanggal],7),1,3)\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summary Frekuensi Transaksi Kartu Kredit Monthly (Ribu Transaksi) ",
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "gridPos": {
          "h": 11,
          "w": 8,
          "x": 0,
          "y": 29
        },
        "id": 30,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "visual",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "console.log(context);\n\n// Extracting data from the dataset\nvar categoryData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[0];\n});\n\nvar metricsData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[1];\n});\n\n// Function to calculate color gradient based on value\nfunction calculateColor(value) {\n  // Normalize the value between 0 and 1\n  var normalizedValue = (value - Math.min(...metricsData)) / (Math.max(...metricsData) - Math.min(...metricsData));\n\n  // Calculate the RGB values based on the normalized value\n  var red = Math.round(255 * normalizedValue);\n  var green = Math.round(255 * (1 - normalizedValue));\n\n  // Convert to hexadecimal format\n  var color = '#' + red.toString(16).padStart(2, '0') + green.toString(16).padStart(2, '0') + '00';\n\n  return color;\n}\n\n// Generate the color array for the bar chart\nvar barColors = metricsData.map(function (value) {\n  return calculateColor(value);\n});\n\nreturn {\n  dataset: context.editor.dataset,\n  xAxis: {\n    type: 'category',\n    data: categoryData\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n  },\n  series: [\n    {\n      type: 'bar',\n      name: \"Sales Volume QRIS (Rp Milyar)\",\n      data: metricsData,\n      itemStyle: {\n        color: function (params) {\n          // Use the precalculated color array\n          return barColors[params.dataIndex];\n        }\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        formatter: function (params) {\n          return 'Volume Transaksi : Rp ' + params[0].value.toFixed(2) + 'Milyar';\n        }\n      }\n    },\n    {\n      type: 'line',\n      name: \"Line Chart\",\n      data: metricsData,\n      lineStyle: {\n        color: 'yellow' // Line color\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'yellow' // Color on hover\n        }\n      },\n      tooltip: {\n        show: false // Hide the tooltip for the \"Line Chart\"\n      }\n    }\n  ],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n};\n",
            "codeHeight": 408,
            "dataset": [
              {
                "name": "trx_date",
                "source": "A"
              },
              {
                "name": "metrics_value",
                "source": "A"
              }
            ],
            "series": [
              {
                "id": "Data",
                "name": "Data",
                "type": "bar",
                "uid": "0c4eabb4-6d9c-4a39-96ae-1fc5f23eed6f"
              },
              {
                "encode": {
                  "x": [],
                  "y": []
                },
                "id": "Data2",
                "name": "",
                "type": "line",
                "uid": "e70da15c-57b9-490d-90da-d8df27ca3c35"
              }
            ]
          }
        },
        "pluginVersion": "5.2.0",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "with  a as (\r\n  select \r\n    trx_date\r\n    ,convert(decimal(18,2),sum(total_nominal)/1000000000) transaction_volume  \r\n  from [QRIS].[dbo].[incoming_QRIS_EXT_BRI_DAILY]\r\n  where \r\n    datediff(MONTH, trx_date,getdate()) <= 6 and resp_code ='00'\r\n    --and convert(varchar(7), [date],120) >= '2023-06'\r\n  group by \r\n    trx_date\r\n)\r\nselect\r\nyear([trx_date]) as y,\r\nmonth([trx_date]) as m\r\n, SUBSTRING(convert(varchar,[trx_date],7),1,3) as trx_date\r\n ,sum(transaction_volume) metrics_value\r\nfrom a\r\ngroup by year([trx_date]), month([trx_date]), SUBSTRING(convert(varchar,[trx_date],7),1,3)\r\norder by year([trx_date]), month([trx_date]), SUBSTRING(convert(varchar,[trx_date],7),1,3)\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summary Sales Volume QRIS Monthly (Rp Milyar)",
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "gridPos": {
          "h": 11,
          "w": 8,
          "x": 8,
          "y": 29
        },
        "id": 13,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "visual",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "console.log(context);\n\n// Extracting data from the dataset\nvar categoryData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[0];\n});\n\nvar metricsData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[1];\n});\n\n// Function to calculate color gradient based on value\nfunction calculateColor(value) {\n  // Normalize the value between 0 and 1\n  var normalizedValue = (value - Math.min(...metricsData)) / (Math.max(...metricsData) - Math.min(...metricsData));\n\n  // Calculate the RGB values based on the normalized value\n  var red = Math.round(255 * normalizedValue);\n  var green = Math.round(255 * (1 - normalizedValue));\n\n  // Convert to hexadecimal format\n  var color = '#' + red.toString(16).padStart(2, '0') + green.toString(16).padStart(2, '0') + '00';\n\n  return color;\n}\n\n// Generate the color array for the bar chart\nvar barColors = metricsData.map(function (value) {\n  return calculateColor(value);\n});\n\nreturn {\n  dataset: context.editor.dataset,\n  xAxis: {\n    type: 'category',\n    data: categoryData\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n  },\n  series: [\n    {\n      type: 'bar',\n      name: \"Sales Volume Kartu Debit (Rp Milyar)\",\n      data: metricsData,\n      itemStyle: {\n        color: function (params) {\n          // Use the precalculated color array\n          return barColors[params.dataIndex];\n        }\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        formatter: function (params) {\n          return 'Volume Transaksi : Rp ' + params[0].value.toFixed(2) + 'Milyar';\n        }\n      }\n    },\n    {\n      type: 'line',\n      name: \"Line Chart\",\n      data: metricsData,\n      lineStyle: {\n        color: 'yellow' // Line color\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'yellow' // Color on hover\n        }\n      },\n      tooltip: {\n        show: false // Hide the tooltip for the \"Line Chart\"\n      }\n    }\n  ],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n};\n",
            "codeHeight": 408,
            "dataset": [
              {
                "name": "trx_date",
                "source": "A"
              },
              {
                "name": "metrics_value",
                "source": "A"
              }
            ],
            "series": [
              {
                "id": "Data",
                "name": "Data",
                "type": "bar",
                "uid": "0c4eabb4-6d9c-4a39-96ae-1fc5f23eed6f"
              },
              {
                "encode": {
                  "x": [],
                  "y": []
                },
                "id": "Data2",
                "name": "",
                "type": "line",
                "uid": "e70da15c-57b9-490d-90da-d8df27ca3c35"
              }
            ]
          }
        },
        "pluginVersion": "5.2.0",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "with  a as (\r\n  select \r\n    Tanggal\r\n    ,convert(decimal(18,2),sum(TRANSACTION_AMOUNT)/1000000000) transaction_volume    \r\n  from [DataAnalytics].dbo.[incoming_NPG_EXT_BRI_DAILY]\r\n  where \r\n    datediff(MONTH, Tanggal,getdate()) <= 6 and RC ='00'\r\n    --and convert(varchar(7), [date],120) >= '2023-06'\r\n  group by \r\n    Tanggal\r\n)\r\nselect\r\nyear([Tanggal]) as y,\r\nmonth([Tanggal]) as m\r\n, SUBSTRING(convert(varchar,[Tanggal],7),1,3) as trx_date\r\n ,sum(transaction_volume) metrics_value\r\nfrom a\r\ngroup by year([Tanggal]), month([Tanggal]), SUBSTRING(convert(varchar,[Tanggal],7),1,3)\r\norder by year([Tanggal]), month([Tanggal]), SUBSTRING(convert(varchar,[Tanggal],7),1,3)\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summary Sales Volume Kartu Debit Monthly (Rp Milyar)",
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "gridPos": {
          "h": 11,
          "w": 8,
          "x": 16,
          "y": 29
        },
        "id": 18,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "visual",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "console.log(context);\n\n// Extracting data from the dataset\nvar categoryData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[0];\n});\n\nvar metricsData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[1];\n});\n\n// Function to calculate color gradient based on value\nfunction calculateColor(value) {\n  // Normalize the value between 0 and 1\n  var normalizedValue = (value - Math.min(...metricsData)) / (Math.max(...metricsData) - Math.min(...metricsData));\n\n  // Calculate the RGB values based on the normalized value\n  var red = Math.round(255 * normalizedValue);\n  var green = Math.round(255 * (1 - normalizedValue));\n\n  // Convert to hexadecimal format\n  var color = '#' + red.toString(16).padStart(2, '0') + green.toString(16).padStart(2, '0') + '00';\n\n  return color;\n}\n\n// Generate the color array for the bar chart\nvar barColors = metricsData.map(function (value) {\n  return calculateColor(value);\n});\n\nreturn {\n  dataset: context.editor.dataset,\n  xAxis: {\n    type: 'category',\n    data: categoryData\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n  },\n  series: [\n    {\n      type: 'bar',\n      name: \"Sales Volume Kartu Kredit (Rp Milyar)\",\n      data: metricsData,\n      itemStyle: {\n        color: function (params) {\n          // Use the precalculated color array\n          return barColors[params.dataIndex];\n        }\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        formatter: function (params) {\n          return 'Volume Transaksi : Rp ' + params[0].value.toFixed(2) + 'Milyar';\n        }\n      }\n    },\n    {\n      type: 'line',\n      name: \"Line Chart\",\n      data: metricsData,\n      lineStyle: {\n        color: 'yellow' // Line color\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'yellow' // Color on hover\n        }\n      },\n      tooltip: {\n        show: false // Hide the tooltip for the \"Line Chart\"\n      }\n    }\n  ],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n};\n",
            "codeHeight": 408,
            "dataset": [
              {
                "name": "trx_date",
                "source": "A"
              },
              {
                "name": "metrics_value",
                "source": "A"
              }
            ],
            "series": [
              {
                "id": "Data",
                "name": "Data",
                "type": "bar",
                "uid": "0c4eabb4-6d9c-4a39-96ae-1fc5f23eed6f"
              },
              {
                "encode": {
                  "x": [],
                  "y": []
                },
                "id": "Data2",
                "name": "",
                "type": "line",
                "uid": "e70da15c-57b9-490d-90da-d8df27ca3c35"
              }
            ]
          }
        },
        "pluginVersion": "5.2.0",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "with  a as (\r\n  select \r\n    Tanggal\r\n    ,convert(decimal(18,2),sum(TRANSACTION_AMOUNT)/1000000000) transaction_volume    \r\n  from KartuKredit.dbo.[incoming_CC_EXT_BRI_DAILY]\r\n  where \r\n    datediff(MONTH, Tanggal,getdate()) <= 6 and RC ='00'\r\n    --and convert(varchar(7), [date],120) >= '2023-06'\r\n  group by \r\n    Tanggal\r\n)\r\nselect\r\nyear([Tanggal]) as y,\r\nmonth([Tanggal]) as m\r\n, SUBSTRING(convert(varchar,[Tanggal],7),1,3) as trx_date\r\n ,sum(transaction_volume) metrics_value\r\nfrom a\r\ngroup by year([Tanggal]), month([Tanggal]), SUBSTRING(convert(varchar,[Tanggal],7),1,3)\r\norder by year([Tanggal]), month([Tanggal]), SUBSTRING(convert(varchar,[Tanggal],7),1,3)\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summary Sales Volume Kartu Kredit Monthly (Rp Milyar)",
        "type": "volkovlabs-echarts-panel"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 40
        },
        "id": 24,
        "panels": [],
        "title": "Summary Daily",
        "type": "row"
      },
      {
        "datasource": {
          "type": "loki",
          "uid": "P8E80F9AEF21F6940"
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 41
        },
        "id": 14,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<CENTER>\n<p style=\"background-color:#1C82AD;\"><b><font size=\"5\" color=\"#ffffff\">\nData Transaksi Daily\n</font></b></p>\n</CENTER>",
          "mode": "html"
        },
        "pluginVersion": "10.0.2",
        "type": "text"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "gridPos": {
          "h": 11,
          "w": 8,
          "x": 0,
          "y": 43
        },
        "id": 31,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "visual",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "console.log(context);\n\n// Extracting data from the dataset\nvar categoryData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[0];\n});\n\nvar metricsData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[1];\n});\n\n// Function to calculate color gradient based on value\nfunction calculateColor(value) {\n  // Normalize the value between 0 and 1\n  var normalizedValue = (value - Math.min(...metricsData)) / (Math.max(...metricsData) - Math.min(...metricsData));\n\n  // Calculate the RGB values based on the normalized value\n  var red = Math.round(255 * normalizedValue);\n  var green = Math.round(255 * (1 - normalizedValue));\n\n  // Convert to hexadecimal format\n  var color = '#' + red.toString(16).padStart(2, '0') + green.toString(16).padStart(2, '0') + '00';\n\n  return color;\n}\n\n// Generate the color array for the bar chart\nvar barColors = metricsData.map(function (value) {\n  return calculateColor(value);\n});\n\nreturn {\n  dataset: context.editor.dataset,\n  xAxis: {\n    type: 'category',\n    data: categoryData,\n    axisLabel: {\n      fontSize: 7, // Ukuran font yang lebih kecil\n      // Penyesuaian lainnya\n    },\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n  },\n  series: [\n    {\n      type: 'bar',\n      name: \"Frekeunsi Transaksi QRIS (Ribu Transaksi)\",\n      data: metricsData,\n      itemStyle: {\n        color: function (params) {\n          // Use the precalculated color array\n          return barColors[params.dataIndex];\n        }\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        formatter: function (params) {\n          return 'Volume Transaksi : Rp ' + params[0].value.toFixed(2) + 'Milyar';\n        }\n      }\n    },\n    {\n      type: 'line',\n      name: \"Line Chart\",\n      data: metricsData,\n      lineStyle: {\n        color: 'yellow' // Line color\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'yellow' // Color on hover\n        }\n      },\n      tooltip: {\n        show: false // Hide the tooltip for the \"Line Chart\"\n      }\n    }\n  ],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n};\n",
            "codeHeight": 408,
            "dataset": [
              {
                "name": "trx_date",
                "source": "A"
              },
              {
                "name": "metrics_value",
                "source": "A"
              }
            ],
            "series": [
              {
                "id": "Data",
                "name": "Data",
                "type": "bar",
                "uid": "0c4eabb4-6d9c-4a39-96ae-1fc5f23eed6f"
              },
              {
                "encode": {
                  "x": [],
                  "y": []
                },
                "id": "Data2",
                "name": "",
                "type": "line",
                "uid": "e70da15c-57b9-490d-90da-d8df27ca3c35"
              }
            ]
          }
        },
        "pluginVersion": "5.2.0",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "with  a as (\r\n  SELECT \r\n    --CONVERT(VARCHAR(10),trx_date,120) trx_date\r\n    trx_date\r\n    ,convert(decimal(18,2),SUM(jumlah_transaksi)/1000) transaction_frequency\r\n  FROM [QRIS].[dbo].[incoming_QRIS_EXT_BRI_DAILY]\r\n  WHERE \r\n    DATEDIFF(DAY,trx_date,GETDATE()) < 30 and resp_code = '00'\r\n  GROUP BY \r\n    trx_date\r\n    --CONVERT(VARCHAR(10),trx_date,120)\r\n)\r\nselect \r\n  SUBSTRING(CONVERT(VARCHAR,trx_date,105),1,2) trx_date\r\n  ,transaction_frequency metrics_value\r\nfrom a\r\norder by a.trx_date",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summary Frekuensi Transaksi QRIS Daily (Ribu Transaksi) ",
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "gridPos": {
          "h": 11,
          "w": 8,
          "x": 8,
          "y": 43
        },
        "id": 19,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "visual",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "console.log(context);\n\n// Extracting data from the dataset\nvar categoryData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[0];\n});\n\nvar metricsData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[1];\n});\n\n// Function to calculate color gradient based on value\nfunction calculateColor(value) {\n  // Normalize the value between 0 and 1\n  var normalizedValue = (value - Math.min(...metricsData)) / (Math.max(...metricsData) - Math.min(...metricsData));\n\n  // Calculate the RGB values based on the normalized value\n  var red = Math.round(255 * normalizedValue);\n  var green = Math.round(255 * (1 - normalizedValue));\n\n  // Convert to hexadecimal format\n  var color = '#' + red.toString(16).padStart(2, '0') + green.toString(16).padStart(2, '0') + '00';\n\n  return color;\n}\n\n// Generate the color array for the bar chart\nvar barColors = metricsData.map(function (value) {\n  return calculateColor(value);\n});\n\nreturn {\n  dataset: context.editor.dataset,\n  xAxis: {\n    type: 'category',\n    data: categoryData,\n    axisLabel: {\n      fontSize: 8, // Ukuran font yang lebih kecil\n      // Penyesuaian lainnya\n    },\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n  },\n  series: [\n    {\n      type: 'bar',\n      name: \"Frekeunsi Transaksi Kartu Debit (Ribu Transaksi)\",\n      data: metricsData,\n      itemStyle: {\n        color: function (params) {\n          // Use the precalculated color array\n          return barColors[params.dataIndex];\n        }\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        formatter: function (params) {\n          return 'Volume Transaksi : Rp ' + params[0].value.toFixed(2) + 'Milyar';\n        }\n      }\n    },\n    {\n      type: 'line',\n      name: \"Line Chart\",\n      data: metricsData,\n      lineStyle: {\n        color: 'yellow' // Line color\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'yellow' // Color on hover\n        }\n      },\n      tooltip: {\n        show: false // Hide the tooltip for the \"Line Chart\"\n      }\n    }\n  ],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n};\n",
            "codeHeight": 408,
            "dataset": [
              {
                "name": "trx_date",
                "source": "A"
              },
              {
                "name": "metrics_value",
                "source": "A"
              }
            ],
            "series": [
              {
                "id": "Data",
                "name": "Data",
                "type": "bar",
                "uid": "0c4eabb4-6d9c-4a39-96ae-1fc5f23eed6f"
              },
              {
                "encode": {
                  "x": [],
                  "y": []
                },
                "id": "Data2",
                "name": "",
                "type": "line",
                "uid": "e70da15c-57b9-490d-90da-d8df27ca3c35"
              }
            ]
          }
        },
        "pluginVersion": "5.2.0",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "with  a as (\r\n  SELECT \r\n    Tanggal\r\n    ,convert(decimal(18,2),SUM(TRANSACTION_TOTAL)/1000) transaction_frequency\r\n  FROM [DataAnalytics].dbo.[incoming_NPG_EXT_BRI_DAILY]\r\n  WHERE \r\n    DATEDIFF(DAY,Tanggal,GETDATE()) < 30 and RC ='00'\r\n  GROUP BY \r\n    Tanggal\r\n)\r\nselect \r\n   SUBSTRING(CONVERT(VARCHAR,Tanggal,105),1,2) trx_date\r\n  ,transaction_frequency metrics_value\r\nfrom a\r\norder by a.Tanggal",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summary Frekuensi Transaksi Kartu Debit Daily (Ribu Transaksi) ",
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "gridPos": {
          "h": 11,
          "w": 8,
          "x": 16,
          "y": 43
        },
        "id": 22,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "visual",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "console.log(context);\n\n// Extracting data from the dataset\nvar categoryData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[0];\n});\n\nvar metricsData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[1];\n});\n\n// Function to calculate color gradient based on value\nfunction calculateColor(value) {\n  // Normalize the value between 0 and 1\n  var normalizedValue = (value - Math.min(...metricsData)) / (Math.max(...metricsData) - Math.min(...metricsData));\n\n  // Calculate the RGB values based on the normalized value\n  var red = Math.round(255 * normalizedValue);\n  var green = Math.round(255 * (1 - normalizedValue));\n\n  // Convert to hexadecimal format\n  var color = '#' + red.toString(16).padStart(2, '0') + green.toString(16).padStart(2, '0') + '00';\n\n  return color;\n}\n\n// Generate the color array for the bar chart\nvar barColors = metricsData.map(function (value) {\n  return calculateColor(value);\n});\n\nreturn {\n  dataset: context.editor.dataset,\n  xAxis: {\n    type: 'category',\n    data: categoryData,\n     axisLabel: {\n      fontSize: 8, // Ukuran font yang lebih kecil\n      // Penyesuaian lainnya\n    },\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n  },\n  series: [\n    {\n      type: 'bar',\n      name: \"Frekeunsi Transaksi Kartu Kredit (Ribu Transaksi)\",\n      data: metricsData,\n      itemStyle: {\n        color: function (params) {\n          // Use the precalculated color array\n          return barColors[params.dataIndex];\n        }\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        formatter: function (params) {\n          return 'Volume Transaksi : Rp ' + params[0].value.toFixed(2) + 'Milyar';\n        }\n      }\n    },\n    {\n      type: 'line',\n      name: \"Line Chart\",\n      data: metricsData,\n      lineStyle: {\n        color: 'yellow' // Line color\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'yellow' // Color on hover\n        }\n      },\n      tooltip: {\n        show: false // Hide the tooltip for the \"Line Chart\"\n      }\n    }\n  ],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n};\n",
            "codeHeight": 408,
            "dataset": [
              {
                "name": "trx_date",
                "source": "A"
              },
              {
                "name": "metrics_value",
                "source": "A"
              }
            ],
            "series": [
              {
                "id": "Data",
                "name": "Data",
                "type": "bar",
                "uid": "0c4eabb4-6d9c-4a39-96ae-1fc5f23eed6f"
              },
              {
                "encode": {
                  "x": [],
                  "y": []
                },
                "id": "Data2",
                "name": "",
                "type": "line",
                "uid": "e70da15c-57b9-490d-90da-d8df27ca3c35"
              }
            ]
          }
        },
        "pluginVersion": "5.2.0",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "with  a as (\r\n  SELECT \r\n    Tanggal\r\n    ,convert(decimal(18,2),SUM(TRANSACTION_TOTAL)/1000) transaction_frequency\r\n  FROM KartuKredit.dbo.[incoming_CC_EXT_BRI_DAILY]\r\n  WHERE \r\n    DATEDIFF(DAY,Tanggal,GETDATE()) < 30 and RC ='00'\r\n  GROUP BY \r\n    Tanggal\r\n)\r\nselect \r\n   SUBSTRING(CONVERT(VARCHAR,Tanggal,105),1,2) trx_date\r\n  ,transaction_frequency metrics_value\r\nfrom a\r\norder by a.Tanggal",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summary Frekuensi Transaksi Kartu Kredit Daily (Ribu Transaksi) ",
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "gridPos": {
          "h": 11,
          "w": 8,
          "x": 0,
          "y": 54
        },
        "id": 32,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "visual",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "console.log(context);\n\n// Extracting data from the dataset\nvar categoryData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[0];\n});\n\nvar metricsData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[1];\n});\n\n// Function to calculate color gradient based on value\nfunction calculateColor(value) {\n  // Normalize the value between 0 and 1\n  var normalizedValue = (value - Math.min(...metricsData)) / (Math.max(...metricsData) - Math.min(...metricsData));\n\n  // Calculate the RGB values based on the normalized value\n  var red = Math.round(255 * normalizedValue);\n  var green = Math.round(255 * (1 - normalizedValue));\n\n  // Convert to hexadecimal format\n  var color = '#' + red.toString(16).padStart(2, '0') + green.toString(16).padStart(2, '0') + '00';\n\n  return color;\n}\n\n// Generate the color array for the bar chart\nvar barColors = metricsData.map(function (value) {\n  return calculateColor(value);\n});\n\nreturn {\n  dataset: context.editor.dataset,\n  xAxis: {\n    type: 'category',\n    data: categoryData,\n    axisLabel: {\n      fontSize: 7, // Ukuran font yang lebih kecil\n      // Penyesuaian lainnya\n    },\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n  },\n  series: [\n    {\n      type: 'bar',\n      name: \"Sales Volume QRIS (Rp Milyar)\",\n      data: metricsData,\n      itemStyle: {\n        color: function (params) {\n          // Use the precalculated color array\n          return barColors[params.dataIndex];\n        }\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        formatter: function (params) {\n          return 'Volume Transaksi : Rp ' + params[0].value.toFixed(2) + 'Milyar';\n        }\n      }\n    },\n    {\n      type: 'line',\n      name: \"Line Chart\",\n      data: metricsData,\n      lineStyle: {\n        color: 'yellow' // Line color\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'yellow' // Color on hover\n        }\n      },\n      tooltip: {\n        show: false // Hide the tooltip for the \"Line Chart\"\n      }\n    }\n  ],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n};\n",
            "codeHeight": 408,
            "dataset": [
              {
                "name": "trx_date",
                "source": "A"
              },
              {
                "name": "metrics_value",
                "source": "A"
              }
            ],
            "series": [
              {
                "id": "Data",
                "name": "Data",
                "type": "bar",
                "uid": "0c4eabb4-6d9c-4a39-96ae-1fc5f23eed6f"
              },
              {
                "encode": {
                  "x": [],
                  "y": []
                },
                "id": "Data2",
                "name": "",
                "type": "line",
                "uid": "e70da15c-57b9-490d-90da-d8df27ca3c35"
              }
            ]
          }
        },
        "pluginVersion": "5.2.0",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "with a as (\r\n  SELECT \r\n    --CONVERT(VARCHAR(10),TANGGAL_TRANSAKSI,120) trx_date\r\n    trx_date\r\n    ,convert(decimal(18,2),SUM(total_nominal)/1000000000) transaction_volume\r\n  FROM [QRIS].[dbo].[incoming_QRIS_EXT_BRI_DAILY]\r\n  WHERE \r\n    DATEDIFF(DAY,trx_date,GETDATE()) < 30 and resp_code = '00'\r\n  GROUP BY \r\n    trx_date\r\n    --CONVERT(VARCHAR(10),trx_date,120)\r\n)\r\nselect \r\n  SUBSTRING(CONVERT(VARCHAR,trx_date,105),1,2) trx_date\r\n  ,transaction_volume metrics_value\r\nfrom a\r\norder by a.trx_date\r\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summary Sales Volume QRIS Daily (Rp Milyar)",
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "gridPos": {
          "h": 11,
          "w": 8,
          "x": 8,
          "y": 54
        },
        "id": 20,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "visual",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "console.log(context);\n\n// Extracting data from the dataset\nvar categoryData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[0];\n});\n\nvar metricsData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[1];\n});\n\n// Function to calculate color gradient based on value\nfunction calculateColor(value) {\n  // Normalize the value between 0 and 1\n  var normalizedValue = (value - Math.min(...metricsData)) / (Math.max(...metricsData) - Math.min(...metricsData));\n\n  // Calculate the RGB values based on the normalized value\n  var red = Math.round(255 * normalizedValue);\n  var green = Math.round(255 * (1 - normalizedValue));\n\n  // Convert to hexadecimal format\n  var color = '#' + red.toString(16).padStart(2, '0') + green.toString(16).padStart(2, '0') + '00';\n\n  return color;\n}\n\n// Generate the color array for the bar chart\nvar barColors = metricsData.map(function (value) {\n  return calculateColor(value);\n});\n\nreturn {\n  dataset: context.editor.dataset,\n  xAxis: {\n    type: 'category',\n    data: categoryData,\n    axisLabel: {\n      fontSize: 8, // Ukuran font yang lebih kecil\n      // Penyesuaian lainnya\n    },\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n  },\n  series: [\n    {\n      type: 'bar',\n      name: \"Sales Volume Kartu Debit (Rp Milyar)\",\n      data: metricsData,\n      itemStyle: {\n        color: function (params) {\n          // Use the precalculated color array\n          return barColors[params.dataIndex];\n        }\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        formatter: function (params) {\n          return 'Volume Transaksi : Rp ' + params[0].value.toFixed(2) + 'Milyar';\n        }\n      }\n    },\n    {\n      type: 'line',\n      name: \"Line Chart\",\n      data: metricsData,\n      lineStyle: {\n        color: 'yellow' // Line color\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'yellow' // Color on hover\n        }\n      },\n      tooltip: {\n        show: false // Hide the tooltip for the \"Line Chart\"\n      }\n    }\n  ],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n};\n",
            "codeHeight": 408,
            "dataset": [
              {
                "name": "trx_date",
                "source": "A"
              },
              {
                "name": "metrics_value",
                "source": "A"
              }
            ],
            "series": [
              {
                "id": "Data",
                "name": "Data",
                "type": "bar",
                "uid": "0c4eabb4-6d9c-4a39-96ae-1fc5f23eed6f"
              },
              {
                "encode": {
                  "x": [],
                  "y": []
                },
                "id": "Data2",
                "name": "",
                "type": "line",
                "uid": "e70da15c-57b9-490d-90da-d8df27ca3c35"
              }
            ]
          }
        },
        "pluginVersion": "5.2.0",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "with  a as (\r\n  SELECT \r\n    Tanggal\r\n    ,convert(decimal(18,2),SUM(TRANSACTION_AMOUNT)/1000000000) transaction_volume     \r\n  FROM [DataAnalytics].dbo.[incoming_NPG_EXT_BRI_DAILY]\r\n  WHERE \r\n    DATEDIFF(DAY,Tanggal,GETDATE()) < 30 and RC ='00'\r\n  GROUP BY \r\n    Tanggal\r\n)\r\nselect \r\n  SUBSTRING(CONVERT(VARCHAR,Tanggal,105),1,2) trx_date\r\n  ,transaction_volume metrics_value\r\nfrom a\r\norder by a.Tanggal",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summary Sales Volume Kartu Debit Daily (Rp Milyar)",
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "gridPos": {
          "h": 11,
          "w": 8,
          "x": 16,
          "y": 54
        },
        "id": 21,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto",
            "height": 600
          },
          "editorMode": "visual",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "height": 400,
            "name": "default"
          },
          "visualEditor": {
            "code": "console.log(context);\n\n// Extracting data from the dataset\nvar categoryData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[0];\n});\n\nvar metricsData = context.editor.dataset.source.slice(1).map(function (item) {\n  return item[1];\n});\n\n// Function to calculate color gradient based on value\nfunction calculateColor(value) {\n  // Normalize the value between 0 and 1\n  var normalizedValue = (value - Math.min(...metricsData)) / (Math.max(...metricsData) - Math.min(...metricsData));\n\n  // Calculate the RGB values based on the normalized value\n  var red = Math.round(255 * normalizedValue);\n  var green = Math.round(255 * (1 - normalizedValue));\n\n  // Convert to hexadecimal format\n  var color = '#' + red.toString(16).padStart(2, '0') + green.toString(16).padStart(2, '0') + '00';\n\n  return color;\n}\n\n// Generate the color array for the bar chart\nvar barColors = metricsData.map(function (value) {\n  return calculateColor(value);\n});\n\nreturn {\n  dataset: context.editor.dataset,\n  xAxis: {\n    type: 'category',\n    data: categoryData,\n    axisLabel: {\n      fontSize: 8, // Ukuran font yang lebih kecil\n      // Penyesuaian lainnya\n    },\n  },\n  yAxis: {\n    type: 'value',\n    min: 0,\n  },\n  series: [\n    {\n      type: 'bar',\n      name: \"Sales Volume Kartu Kredit (Rp Milyar)\",\n      data: metricsData,\n      itemStyle: {\n        color: function (params) {\n          // Use the precalculated color array\n          return barColors[params.dataIndex];\n        }\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        formatter: function (params) {\n          return 'Volume Transaksi : Rp ' + params[0].value.toFixed(2) + 'Milyar';\n        }\n      }\n    },\n    {\n      type: 'line',\n      name: \"Line Chart\",\n      data: metricsData,\n      lineStyle: {\n        color: 'yellow' // Line color\n      },\n      emphasis: {\n        itemStyle: {\n          color: 'yellow' // Color on hover\n        }\n      },\n      tooltip: {\n        show: false // Hide the tooltip for the \"Line Chart\"\n      }\n    }\n  ],\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n};\n",
            "codeHeight": 408,
            "dataset": [
              {
                "name": "trx_date",
                "source": "A"
              },
              {
                "name": "metrics_value",
                "source": "A"
              }
            ],
            "series": [
              {
                "id": "Data",
                "name": "Data",
                "type": "bar",
                "uid": "0c4eabb4-6d9c-4a39-96ae-1fc5f23eed6f"
              },
              {
                "encode": {
                  "x": [],
                  "y": []
                },
                "id": "Data2",
                "name": "",
                "type": "line",
                "uid": "e70da15c-57b9-490d-90da-d8df27ca3c35"
              }
            ]
          }
        },
        "pluginVersion": "5.2.0",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "with  a as (\r\n  SELECT \r\n    Tanggal\r\n    ,convert(decimal(18,2),SUM(TRANSACTION_AMOUNT)/1000000000) transaction_volume     \r\n  FROM KartuKredit.dbo.[incoming_CC_EXT_BRI_DAILY]\r\n  WHERE \r\n    DATEDIFF(DAY,Tanggal,GETDATE()) < 30 and RC ='00'\r\n  GROUP BY \r\n    Tanggal\r\n)\r\nselect \r\n  SUBSTRING(CONVERT(VARCHAR,Tanggal,105),1,2) trx_date\r\n  ,transaction_volume metrics_value\r\nfrom a\r\norder by a.Tanggal",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Summary Sales Volume Kartu Kredit Daily (Rp Milyar)",
        "type": "volkovlabs-echarts-panel"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 65
        },
        "id": 47,
        "panels": [],
        "title": "Transaksi QRIS Realtime Nasabah Bank Lain di BRI",
        "type": "row"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "__systemRef": "hideSeriesFrom",
              "matcher": {
                "id": "byNames",
                "options": {
                  "mode": "exclude",
                  "names": [
                    "Freq Trx QRIS  Nasabah Bank Lain di BRI"
                  ],
                  "prefix": "All except:",
                  "readOnly": true
                }
              },
              "properties": [
                {
                  "id": "custom.hideFrom",
                  "value": {
                    "legend": false,
                    "tooltip": false,
                    "viz": true
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 9,
          "x": 0,
          "y": 66
        },
        "id": 48,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "alias": "Freq Trx QRIS  Nasabah Bank Lain di BRI",
            "bucketAggs": [
              {
                "field": "trx_datetime",
                "id": "2",
                "settings": {
                  "interval": "5m"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
            },
            "metrics": [
              {
                "id": "1",
                "type": "count"
              }
            ],
            "query": "NOT cpan_code: \"93600002\" AND resp_code: \"00\" AND trx_type: \"2\"",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Freq Trx QRIS  Nasabah Bank Lain di BRI (per 5m)",
        "transparent": true,
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 10,
          "x": 9,
          "y": 66
        },
        "id": 49,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "alias": "Volume Trx QRIS  Nasabah Bank Lain di BRI ",
            "bucketAggs": [
              {
                "field": "trx_datetime",
                "id": "2",
                "settings": {
                  "interval": "5m"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
            },
            "metrics": [
              {
                "field": "trx_amount",
                "id": "1",
                "settings": {
                  "script": "_value/100000000"
                },
                "type": "sum"
              }
            ],
            "query": "NOT cpan_code: \"93600002\" AND resp_code: \"00\" AND trx_type: \"2\"",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Volume Trx QRIS  Nasabah Bank Lain di BRI  (per 5m) (Rp Juta)",
        "transparent": true,
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Count"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 5,
          "x": 19,
          "y": 66
        },
        "id": 50,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "trx_datetime",
                "id": "2",
                "settings": {
                  "interval": "1d",
                  "min_doc_count": "0"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
            },
            "metrics": [
              {
                "id": "1",
                "type": "count"
              }
            ],
            "query": "NOT cpan_code: \"93600002\" AND resp_code: \"00\" AND trx_type: \"2\"",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Total Transaksi Today",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Sum trx_amount_fix"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 5,
          "x": 19,
          "y": 70
        },
        "id": 51,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "trx_datetime",
                "id": "2",
                "settings": {
                  "interval": "1d",
                  "min_doc_count": "0"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
            },
            "metrics": [
              {
                "field": "trx_amount_fix",
                "id": "1",
                "settings": {
                  "script": "_value/1000000"
                },
                "type": "sum"
              }
            ],
            "query": "NOT cpan_code: \"93600002\" AND resp_code: \"00\" AND trx_type: \"2\"",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Volume Transaksi Today (Rp Juta)",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Count"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Frequency"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Volume"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "merchant pan"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "string"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 12,
          "w": 24,
          "x": 0,
          "y": 74
        },
        "id": 52,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Volume"
            }
          ]
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "iss_name.keyword",
                "id": "14",
                "settings": {
                  "min_doc_count": "1",
                  "order": "desc",
                  "orderBy": "10",
                  "size": "100"
                },
                "type": "terms"
              },
              {
                "field": "cpan_code.keyword",
                "id": "15",
                "settings": {
                  "min_doc_count": "1",
                  "order": "desc",
                  "orderBy": "10",
                  "size": "100"
                },
                "type": "terms"
              },
              {
                "field": "acquire_institution_id.keyword",
                "id": "16",
                "settings": {
                  "min_doc_count": "1",
                  "order": "desc",
                  "orderBy": "10",
                  "size": "100"
                },
                "type": "terms"
              },
              {
                "field": "iss_mid.keyword",
                "id": "17",
                "settings": {
                  "min_doc_count": "1",
                  "order": "desc",
                  "orderBy": "10",
                  "size": "100"
                },
                "type": "terms"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
            },
            "metrics": [
              {
                "id": "1",
                "type": "count"
              },
              {
                "field": "trx_amount_fix",
                "hide": false,
                "id": "10",
                "settings": {},
                "type": "sum"
              }
            ],
            "query": "NOT cpan_code: 93600002 AND resp_code : 00 AND trx_type : 2",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Top Merchant",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "nmid.keyword": true
              },
              "indexByName": {
                "Count": 4,
                "Sum": 5,
                "acquire_institution_id.keyword": 3,
                "cpan_code.keyword": 2,
                "iss_mid.keyword": 1,
                "iss_name.keyword": 0
              },
              "renameByName": {
                "acquire_institution_id.keyword": "Acquire ID",
                "cpan": "CPAN/ Issuer",
                "cpan.keyword": "CPAN/Issuer",
                "cpan_code.keyword": "Issuer Code",
                "data_REQUEST_acquirerId.keyword": "acquire id",
                "data_REQUEST_merchantCity.keyword": "merchant city",
                "data_REQUEST_merchantId.keyword": "merchant id",
                "data_REQUEST_merchantName.keyword": "merchant name",
                "data_REQUEST_pan.keyword": "merchant pan",
                "data_REQUEST_postalCode.keyword": "postal code",
                "iss_mid.keyword": "Merchant ID",
                "iss_name.keyword": "Merchant Name",
                "mpan.keyword": "Merchant Pan",
                "nmid.keyword": ""
              }
            }
          }
        ],
        "type": "table"
      },
      {
        "datasource": {
          "type": "datasource",
          "uid": "-- Mixed --"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "acqBank.keyword"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "string"
                },
                {
                  "id": "displayName",
                  "value": "acquirer Bank"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "merchantName.keyword"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "merchantName"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "location.keyword"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "location"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "midOrMPAN.keyword"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "mid"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "tidOrStoreID.keyword"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "tid"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Count"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Frequency"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Volume"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "switch.keyword"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "switching"
                },
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "INCNPG_LINK": {
                          "index": 0,
                          "text": "LINK"
                        },
                        "INCNPG_PRIMA": {
                          "index": 1,
                          "text": "PRIMA"
                        }
                      },
                      "type": "value"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 10,
          "w": 24,
          "x": 0,
          "y": 86
        },
        "id": 53,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "frameIndex": 1,
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Volume"
            }
          ]
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "cpan_code.keyword",
                "id": "5",
                "settings": {
                  "min_doc_count": "1",
                  "order": "desc",
                  "orderBy": "6",
                  "size": "100"
                },
                "type": "terms"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
            },
            "hide": false,
            "metrics": [
              {
                "id": "1",
                "type": "count"
              },
              {
                "field": "trx_amount_fix",
                "id": "6",
                "type": "sum"
              }
            ],
            "query": "NOT cpan_code: 93600002 AND resp_code : 00 AND trx_type : 2",
            "refId": "A",
            "timeField": "@timestamp"
          },
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "hide": false,
            "rawQuery": true,
            "rawSql": "select issuer_code as 'cpan_code.keyword',issuer_name  FROM QRIS.dbo.tbl_issuer_id",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "timeFrom": "now/d",
        "title": "Top Issuer Success Only",
        "transformations": [
          {
            "id": "joinByField",
            "options": {
              "byField": "cpan_code.keyword",
              "mode": "inner"
            }
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {
                "Count": 3,
                "Sum": 4,
                "cpan_code.keyword": 1,
                "issuer_name": 0,
                "trx_status.keyword": 2
              },
              "renameByName": {
                "Count": "",
                "Sum": "",
                "cpan_code.keyword": "Issuer Code",
                "data_REQUEST_acquirerId.keyword": "acquirer Id",
                "data_REQUEST_cpan_code.keyword": "cpan code",
                "issuer_name": "issuer name",
                "switching_name": "switching name",
                "trx_status.keyword": "Trx Status"
              }
            }
          }
        ],
        "type": "table"
      },
      {
        "datasource": {
          "type": "mssql",
          "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "issuer name"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "string"
                },
                {
                  "id": "displayName",
                  "value": "Issuer Name"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "issuer_code"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Issuer Code"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Jumlah"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Jumlah"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Total Sukses"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Total Sukses"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Total Gagal"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Total Gagal"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "% Sukses"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "% Sukses"
                },
                {
                  "id": "unit",
                  "value": "percent"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "% Gagal"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "% Gagal"
                },
                {
                  "id": "unit",
                  "value": "percent"
                },
                {
                  "id": "decimals",
                  "value": 1
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sukses Volume "
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Sukses Volume (Jt)"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Gagal Volume "
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "Gagal Volume (Jt)"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Total Volume"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "displayName",
                  "value": "Total Volume (Jt)"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 12,
          "w": 24,
          "x": 0,
          "y": 96
        },
        "id": 55,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "frameIndex": 1,
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "Volume"
            }
          ]
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "datasource": {
              "type": "mssql",
              "uid": "d630ced1-f8b6-4311-a311-28103267d72f"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "WITH a AS (\r\n  SELECT\r\n    SUBSTRING(cpan, 0, 9) AS issuer_code,\r\n    COUNT(resp_code) AS total_trx,\r\n    SUM(total_nominal) AS total_volume,\r\n    SUM(CASE WHEN resp_code = '00' THEN 1 ELSE 0 END) AS total_success,\r\n    SUM(CASE WHEN resp_code != '00' THEN 1 ELSE 0 END) AS total_failure,\r\n    SUM(CASE WHEN resp_code = '00' THEN total_nominal ELSE 0 END) AS success_volume,\r\n    SUM(CASE WHEN resp_code != '00' THEN total_nominal ELSE 0 END) AS failure_volume\r\n  FROM\r\n    [QRIS].[dbo].[incoming_QRIS_EXT_BRI_DAILY]\r\n  WHERE\r\n    DATEDIFF(DAY,trx_date,GETDATE()-1) = 0 \r\n  GROUP BY\r\n    SUBSTRING(cpan, 0, 9)\r\n), \r\nb AS (\r\n  SELECT\r\n    issuer_code,\r\n    issuer_name \r\n  FROM\r\n    QRIS.dbo.tbl_issuer_id\r\n)\r\nSELECT\r\n  a.issuer_code,\r\n  total_trx,\r\n  total_success,\r\n  total_failure,\r\n  CONVERT(DECIMAL(4, 1), (total_success * 100.0) / total_trx) AS percent_success,\r\n  CONVERT(DECIMAL(4, 1), (total_failure * 100.0) / total_trx) AS percent_failure,\r\n  CONVERT(decimal(18,2),SUM(a.success_volume) / 1000000) AS success_volume,\r\n  CONVERT(decimal(18,2),SUM(a.failure_volume) / 1000000) AS failure_volume,\r\n  CONVERT(decimal(18,2),SUM(a.total_volume)/ 1000000 ) AS total_volume,\r\n  b.issuer_name\r\nFROM\r\n  a\r\nJOIN \r\n  b ON a.issuer_code = b.issuer_code\r\nGROUP BY\r\n  a.issuer_code,\r\n  total_trx,\r\n  total_success,\r\n  total_failure,\r\n  b.issuer_name,\r\n  a.total_volume\r\nORDER BY \r\n  total_trx DESC;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "timeFrom": "now/d",
        "title": "Top Issuer H-1 With Percentage",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {
                "Count": 4,
                "Sum": 5,
                "cpan_code.keyword": 1,
                "issuer_name": 0,
                "resp_code.keyword": 2,
                "trx_status.keyword": 3
              },
              "renameByName": {
                "Count": "",
                "Sum": "",
                "cpan_code.keyword": "Issuer Code",
                "data_REQUEST_acquirerId.keyword": "acquirer Id",
                "data_REQUEST_cpan_code.keyword": "cpan code",
                "failure_volume": "Gagal Volume ",
                "issuer_name": "issuer name",
                "percent_failure": "% Gagal",
                "percent_success": "% Sukses",
                "resp_code.keyword": "Respon Code",
                "success_volume": "Sukses Volume ",
                "switching_name": "switching name",
                "total_failure": "Total Gagal",
                "total_success": "Total Sukses",
                "total_trx": "Jumlah",
                "total_volume": "Total Volume",
                "transaction_volume": "Volume (Rp Juta)",
                "trx_status.keyword": "Trx Status"
              }
            }
          }
        ],
        "type": "table"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 108
        },
        "id": 36,
        "panels": [],
        "title": "Transaksi Nasabah Bank Lain di EDC BRI",
        "type": "row"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 9,
          "x": 0,
          "y": 109
        },
        "id": 37,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "alias": "Freq Trx Kartu Debit & Kredit Bank Lain di Merchant BRI",
            "bucketAggs": [
              {
                "field": "@timestamp",
                "id": "2",
                "settings": {
                  "interval": "5m"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
            },
            "metrics": [
              {
                "id": "1",
                "type": "count"
              }
            ],
            "query": "switch :\"PSW X\" AND NOT jenisTrx :BRI AND rc: \"00\"",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Freq Trx EDC Nasabah Bank Lain di BRI (per 5m)",
        "transparent": true,
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 10,
          "x": 9,
          "y": 109
        },
        "id": 38,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "alias": "Volume Trx Kartu Debit & Kredit Bank Lain di Merchant BRI",
            "bucketAggs": [
              {
                "field": "@timestamp",
                "id": "2",
                "settings": {
                  "interval": "5m"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
            },
            "metrics": [
              {
                "field": "trxAmount",
                "id": "1",
                "settings": {
                  "script": "_value/100000000"
                },
                "type": "sum"
              }
            ],
            "query": "switch :\"PSW X\" AND NOT jenisTrx :BRI AND rc: \"00\"",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Volume Trx EDC Nasabah Bank Lain di BRI (per 5m) (Rp Juta)",
        "transparent": true,
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Count"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 5,
          "x": 19,
          "y": 109
        },
        "id": 39,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "@timestamp",
                "id": "2",
                "settings": {
                  "interval": "1d",
                  "min_doc_count": "0"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
            },
            "metrics": [
              {
                "id": "1",
                "type": "count"
              }
            ],
            "query": "switch :\"PSW X\" AND NOT jenisTrx :BRI AND rc: \"00\"",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Total Transaksi Today",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Sum trxAmount"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "locale"
                },
                {
                  "id": "decimals",
                  "value": 0
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 5,
          "x": 19,
          "y": 113
        },
        "id": 40,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "center",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "sum"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "auto"
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "@timestamp",
                "id": "2",
                "settings": {
                  "interval": "1d",
                  "min_doc_count": "0"
                },
                "type": "date_histogram"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
            },
            "metrics": [
              {
                "field": "trxAmount",
                "id": "1",
                "settings": {
                  "script": "_value/100000000"
                },
                "type": "sum"
              }
            ],
            "query": "switch :\"PSW X\" AND NOT jenisTrx :BRI AND rc: \"00\"",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Volume Transaksi Today (Rp Juta)",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "acqBank.keyword"
              },
              "properties": [
                {
                  "id": "unit",
                  "value": "string"
                },
                {
                  "id": "displayName",
                  "value": "acquirer Bank"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "merchantName.keyword"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "merchantName"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "location.keyword"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "location"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "midOrMPAN.keyword"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "mid"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "tidOrStoreID.keyword"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "tid"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Count"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Frequency"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Sum"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Volume"
                },
                {
                  "id": "unit",
                  "value": "locale"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "switch.keyword"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "switching"
                },
                {
                  "id": "mappings",
                  "value": [
                    {
                      "options": {
                        "INCNPG_LINK": {
                          "index": 0,
                          "text": "LINK"
                        },
                        "INCNPG_PRIMA": {
                          "index": 1,
                          "text": "PRIMA"
                        }
                      },
                      "type": "value"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 18,
          "w": 24,
          "x": 0,
          "y": 117
        },
        "id": 41,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": []
        },
        "pluginVersion": "10.0.2",
        "targets": [
          {
            "alias": "",
            "bucketAggs": [
              {
                "field": "merchantName.keyword",
                "id": "2",
                "settings": {
                  "min_doc_count": "1",
                  "order": "desc",
                  "orderBy": "1",
                  "size": "100"
                },
                "type": "terms"
              },
              {
                "field": "location.keyword",
                "id": "3",
                "settings": {
                  "min_doc_count": "1",
                  "order": "desc",
                  "orderBy": "1",
                  "size": "100"
                },
                "type": "terms"
              },
              {
                "field": "switch.keyword",
                "id": "6",
                "settings": {
                  "min_doc_count": "1",
                  "order": "desc",
                  "orderBy": "1",
                  "size": "100"
                },
                "type": "terms"
              },
              {
                "field": "midOrMPAN.keyword",
                "id": "7",
                "settings": {
                  "min_doc_count": "1",
                  "order": "desc",
                  "orderBy": "1",
                  "size": "100"
                },
                "type": "terms"
              },
              {
                "field": "bin_kartu.keyword",
                "id": "8",
                "settings": {
                  "min_doc_count": "1",
                  "order": "desc",
                  "orderBy": "1",
                  "size": "100"
                },
                "type": "terms"
              }
            ],
            "datasource": {
              "type": "elasticsearch",
              "uid": "f666aebd-654c-4932-8d51-35bd1f608218"
            },
            "metrics": [
              {
                "id": "1",
                "type": "count"
              },
              {
                "field": "trxAmount",
                "id": "4",
                "settings": {
                  "script": "_value/100"
                },
                "type": "sum"
              }
            ],
            "query": "switch :\"PSW X\" AND rc:\"00\" AND NOT jenisTrx :BRI",
            "refId": "A",
            "timeField": "@timestamp"
          }
        ],
        "timeFrom": "now/d",
        "title": "Top Merchant",
        "transformations": [
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "midOrMPAN.keyword": false,
                "switch.keyword": true
              },
              "indexByName": {
                "Count": 5,
                "Sum": 6,
                "bin_kartu.keyword": 4,
                "location.keyword": 1,
                "merchantName.keyword": 0,
                "midOrMPAN.keyword": 2,
                "switch.keyword": 3
              },
              "renameByName": {
                "acqBank.keyword": "Acquire ID",
                "bin_kartu.keyword": "BIN Kartu",
                "location.keyword": "Location",
                "merchantName.keyword": "Merchant Name",
                "midOrMPAN.keyword": "Merchant ID",
                "noKartuOrCPAN.keyword": "No Kartu",
                "switch.keyword": "Switch",
                "tidOrStoreID.keyword": "Store ID"
              }
            }
          }
        ],
        "type": "table"
      }
    ],
    "refresh": "",
    "schemaVersion": 38,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "datasource": {
            "type": "elasticsearch",
            "uid": "b58f254a-c539-4b64-b5bd-29f83748dd28"
          },
          "filters": [],
          "hide": 0,
          "name": "Filters",
          "skipUrlSync": false,
          "type": "adhoc"
        }
      ]
    },
    "time": {
      "from": "now-5m",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "Dashboard Transaksi Nasabah Bank Lain di EDC dan QRIS BRI",
    "uid": "d32cd202-b513-45f9-a93c-0227278ac825",
    "version": 128,
    "weekStart": ""
  }